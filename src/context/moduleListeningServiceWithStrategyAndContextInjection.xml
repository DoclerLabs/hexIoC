<root name="applicationContext">

    <helper id="mockDividerHelper" type="hex.ioc.parser.xml.mock.MockDividerHelper" map-type="hex.ioc.parser.xml.mock.IMockDividerHelper"/>

    <service id="myService" type="hex.ioc.parser.xml.mock.MockStubStatefulService"/>

    <module id="myModuleA" type="hex.ioc.parser.xml.mock.MockModuleWithServiceCallback">
        <listen ref="myService">
            <event static-ref="hex.ioc.parser.xml.mock.MockStubStatefulService.INT_VO_UPDATE"
                   method="onFloatServiceCallback"
                   strategy="hex.ioc.parser.xml.mock.MockIntDividerEventAdapterStrategy"
                   injectedInModule="true"/>
        </listen>
    </module>

    <module id="myModuleB" type="hex.ioc.parser.xml.mock.AnotherMockModuleWithServiceCallback">
        <listen ref="myService">
            <event static-ref="hex.ioc.parser.xml.mock.MockStubStatefulService.INT_VO_UPDATE"
                   method="onFloatServiceCallback"
                   strategy="hex.ioc.parser.xml.mock.MockIntDividerEventAdapterStrategy"
                   injectedInModule="false"/>
        </listen>
    </module>

</root>